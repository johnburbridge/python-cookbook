name: Python package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        recipe: [
          "strategy_pattern",
          "factory_pattern", 
          "builder_pattern",
          "observable_pattern",
          "generics"
        ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install global dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    
    - name: Install recipe dependencies
      run: |
        cd ${{ matrix.recipe }}
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Check formatting with black
      run: |
        cd ${{ matrix.recipe }}
        black --check .
    
    - name: Lint with flake8
      run: |
        cd ${{ matrix.recipe }}
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --extend-ignore=E203
    
    - name: Run tests with coverage
      run: |
        cd ${{ matrix.recipe }}
        pytest --cov=${{ matrix.recipe }} --cov-report=xml --cov-report=term-missing tests/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ matrix.recipe }}
        name: ${{ matrix.recipe }}-py${{ matrix.python-version }}
        fail_ci_if_error: true
        verbose: true
        directory: ${{ matrix.recipe }}
    